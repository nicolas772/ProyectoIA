/*
    printf("---------------------- SOLUCION CON GREEDY v2------------------------\n");
    
    //------------------solucion greedy 2-------------------------
    int solucion[cant_examenes];
    int cant_timeslots_actual = 1;
    for(int columna=0; columna<cant_examenes; columna++){
        if(matriz_conflictos[0][columna]==0){
            solucion[columna]=1;
        }
        else{
            solucion[columna]=2;
            cant_timeslots_actual = 2;
        }       
    }

    //----------------Algoritmo greedy para encontrar una solucion inicial-----------------------------
    int flag = 0; //flag que indica si se debe aumentar la cantidad de timeslots actual
    for(int sol=0; sol<cant_examenes; sol++){
        for(int solu=sol+1; solu<cant_examenes; solu++){
            if(solucion[sol]==solucion[solu]){
                if(matriz_conflictos[sol][solu]==1){
                    flag=1;
                    solucion[solu]=cant_timeslots_actual+1;
                }
            }
        }
        if(flag == 1){
            cant_timeslots_actual++;
        }
        flag = 0;
    }
    TIMESLOT* timeslots_array_gredy2;
    timeslots_array_gredy2 = (TIMESLOT*)malloc(cant_timeslots_actual*sizeof(TIMESLOT));
    int largo_cant_examenes_timeslot = 0;
    for(int j=1; j<=cant_timeslots_actual; j++){
        TIMESLOT tt_aux = {0};
        tt_aux.timeslot = j-1;
        printf("timeslot %d :\n", j);
        for(int i=0; i<cant_examenes; i++){
            if(solucion[i]==j){
                printf("prueba %d\n", i+1);
                tt_aux.examenes_en_timeslot[largo_cant_examenes_timeslot]=i;
                tt_aux.len_examenes_en_timeslot ++;
            }
            
        }
        timeslots_array_gredy2[j]=tt_aux;
        printf("\n");
    } 
    
    //printf("cantidad examenes: %d\n", cant_examenes);
    //printf("cantidad de timeslots con greedy 2: %d\n", cant_timeslots_actual);
    //printf("len students: %d\n", len_students);
    //printf("len examenes estudiante %s : %d\n", students[175].id, students[175].len_mis_examenes);
    //printf("examen %d\n", students[175].mis_examenes[2]);
    */

Carleton91
cantidad Final de timeslots HC: 34
cantidad de timeslots greedy: 34

Carleton92
cantidad Final de timeslots HC: 32
cantidad de timeslots greedy: 32

EarlHaig83
cantidad Final de timeslots HC: 28
cantidad de timeslots greedy: 26

EdHEC92
cantidad Final de timeslots HC: 19
cantidad de timeslots greedy: 19

KingFahd93
cantidad Final de timeslots HC: 20
cantidad de timeslots greedy: 20

LSE91
cantidad Final de timeslots HC: 20
cantidad de timeslots greedy: 19

St.Andrews83
cantidad Final de timeslots HC: 13
cantidad de timeslots greedy: 13

TorontoAS92
cantidad de timeslots greedy: 36
cantidad de timeslots HC: 35

TorontoE92
cantidad de timeslots HC: 10
cantidad de timeslots greedy: 11

Trent92
cantidad Final de timeslots HC: 24
cantidad de timeslots greedy: 23

YorkMills83
cantidad Final de timeslots HC: 25
cantidad de timeslots greedy: 23



